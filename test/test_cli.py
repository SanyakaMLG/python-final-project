import pytest
from click.testing import CliRunner
from src.cli import menu, order
from src.pizza import Pizza, Margherita, Pepperoni, Hawaiian
import re


def test_menu():
    runner = CliRunner()
    res = runner.invoke(menu)
    expected = '- Margherita üßÄ: tomato sauce, mozzarella, tomatoes\n' \
               '- Pepperoni üçï: tomato sauce, mozzarella, pepperoni\n' \
               '- Hawaiian üçç: tomato sauce, mozzarella, chicken, pineapple\n'
    assert res.output == expected


@pytest.mark.parametrize(
    'pizza_name, pizza, size',
    [
        ('margherita', Margherita('L'), 'L'),
        ('PePpErOnI', Pepperoni('XL'), 'XL'),
        ('Hawaiian', Hawaiian('XL'), 'XL')
    ]
)
def test_order_delivery(pizza_name: str, pizza: Pizza, size: str):
    runner = CliRunner()
    res = runner.invoke(order, [pizza_name, size, '--d'])
    assert re.fullmatch(f'–ì–æ—Ç–æ–≤–∏–º {pizza.name}, {size}\\. '
                        f'–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: [2-5] —Å\\.\n'
                        f'–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ [2-5] —Å\\.\n'
                        f'–ü–∏—Ü—Ü–∞ {pizza.name} –≥–æ—Ç–æ–≤–∞\\. '
                        f'–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: [2-5] —Å\\.\n'
                        f'–î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ [2-5] —Å\\.\n', res.output)


@pytest.mark.parametrize(
    'pizza_name, pizza, size',
    [
        ('margherita', Margherita('L'), 'L'),
        ('PePpErOnI', Pepperoni('XL'), 'XL'),
        ('Hawaiian', Hawaiian('XL'), 'XL')
    ]
)
def test_order_pickup(pizza_name: str, pizza: Pizza, size: str):
    runner = CliRunner()
    res = runner.invoke(order, [pizza_name, size])
    assert re.fullmatch(f'–ì–æ—Ç–æ–≤–∏–º {pizza.name}, {size}\\. '
                        f'–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: [2-5] —Å\\.\n'
                        f'–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ [2-5] —Å\\.\n'
                        f'–ü–∏—Ü—Ü–∞ {pizza.name} –≥–æ—Ç–æ–≤–∞\\. '
                        f'–û–∂–∏–¥–∞–µ–º —Å–∞–º–æ–≤—ã–≤–æ–∑\\.\n'
                        f'–ó–∞–±—Ä–∞–ª–∏ –∑–∞ [2-5] —Å\\.\n', res.output)


def test_order_except():
    runner = CliRunner()
    res = runner.invoke(order, ['Ajkhfasjhsf', 'XL'])
    assert isinstance(res.exception, ValueError)
